---
import type { HTMLAttributes } from "astro/types";

export interface Props extends HTMLAttributes<"a"> {
  ["data-mobile"]?: "true" | "false" | null | undefined;
}

const { href, class: className, target, ...props } = Astro.props;

const { pathname } = Astro.url;
// const isActive = href === pathname || href === pathname.replace(/\/$/, "");
const isDetailBlog = href === "/blog" && /\/blog\//.test(pathname);
const isActive = href === pathname || isDetailBlog;
const isOpenNewTab = target === "_blank";
const isNotHidden = !props["data-mobile"] || props["data-mobile"] === "false";
---

<a
  href={href}
  target={target}
  class:list={[
    className,
    "px-2 py-1  text-purple rounded-lg hover:bg-purple-2",
    {
      ["font-extrabold underline decoration-wavy decoration-2"]: isActive,
      ["decoration-none"]: !isActive,
      ["hidden xl:inline-flex"]: !isNotHidden,
      ["inline-flex"]: isNotHidden,
    },
  ]}
  {...props}
>
  <slot />
  {
    isOpenNewTab && (
      <div class="i-mingcute-arrow-left-down-line origin-center rotate-180" />
    )
  }
</a>
